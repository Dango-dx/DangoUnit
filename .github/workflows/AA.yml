name: 打印提交信息
run-name: 打印提交信息 by @${{ github.actor }}

on: [push]

jobs:
#  print_env:
#    uses: Dango-dx/ReusableWorkflows/.github/workflows/print_github_info.yml@master

#  print_a:
#    uses: Dango-dx/ReusableWorkflows/.github/workflows/publish_maven_central.yml@master
#    with:
#      module_path: :lib:widget
#      artifact_name: lib_test
#      version_name: 1.3.5

  job0:
    runs-on: ubuntu-latest
#    container:
      # 指定您的自定义 Docker 镜像及其标签
#      image: registry.cn-shanghai.aliyuncs.com/dango/android_ci:latest
      # platform
#      options: --platform linux/amd64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: prepare
        run: |
      - name: publish
        run: |
          export JAVA_HOME=$JAVA_HOME_17_X64
          
          export ORG_GRADLE_PROJECT_mavenCentralUsername=${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          export ORG_GRADLE_PROJECT_mavenCentralPassword=${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          export ORG_GRADLE_PROJECT_signingInMemoryKey=${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          export ORG_GRADLE_PROJECT_signingInMemoryKeyId=${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYID }}
          export ORG_GRADLE_PROJECT_signingInMemoryKeyPassword=${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
          env
          chmod +x ./gradlew
          ./gradlew :lib:widget:clean
          ./gradlew :lib:widget:assemble
          ./gradlew :lib:widget:publish
        continue-on-error: true
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: aar
          path: ./lib/widget/build/outputs/aar/